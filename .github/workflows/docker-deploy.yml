name: Build and Deploy to Docker Hub

# 1. Cancel stale runs on the same ref
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  test:
    runs-on: ubuntu-latest

    # 2. Cache npm across runs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (v22)
        uses: actions/setup-node@v4 # pinned minor
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Restore additional npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install backend deps & test
        run: |
          cd backend
          npm ci
          npm run test --if-present || echo "No backend tests"

      - name: Install frontend deps & test
        run: |
          cd frontend
          npm ci
          npm run test --if-present || echo "No frontend tests"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3 # pinned minor
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          # branch vs tag → VERSION & TAG lists
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION=latest
          else
            VERSION=${GITHUB_REF#refs/heads/}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAGS=$DOCKERHUB_USERNAME/nipa-travel-backend:$VERSION,$DOCKERHUB_USERNAME/nipa-travel-backend:latest" >> $GITHUB_OUTPUT
          echo "FRONTEND_TAGS=$DOCKERHUB_USERNAME/nipa-travel-frontend:$VERSION,$DOCKERHUB_USERNAME/nipa-travel-frontend:latest" >> $GITHUB_OUTPUT

      - name: Build & push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.TAGS }}
          # 3. Reuse layers to speed up subsequent builds
          cache-from: |
            type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/nipa-travel-backend:cache
          cache-to: |
            type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/nipa-travel-backend:cache,mode=max
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.FRONTEND_TAGS }}
          cache-from: |
            type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/nipa-travel-frontend:cache
          cache-to: |
            type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/nipa-travel-frontend:cache,mode=max
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Docker image summary
        run: |
          {
            echo "## 🐳 Docker Images Built"
            echo "- Backend: $DOCKERHUB_USERNAME/nipa-travel-backend:${{ steps.meta.outputs.VERSION }}"
            echo "- Frontend: $DOCKERHUB_USERNAME/nipa-travel-frontend:${{ steps.meta.outputs.VERSION }}"
          } >> $GITHUB_STEP_SUMMARY
